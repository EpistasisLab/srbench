# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: "*"
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: ['1.6']
        os: [ubuntu-latest]
        algorithm: ["AFPRegressor", "AIFeynman", "BSRRegressor", "DSRRegressor", "EHCRegressor", "FFXRegressor", "FEATRegressor", "FE_AFPRegressor", "EPLEXRegressor", "GPGOMEARegressor", "gplearn", "ITEARegressor", "MRGPRegressor", "OperonRegressor", "PySRRegressor", "sembackpropgp"]
      # Keep running even with some algorithms failing:
      fail-fast: false
    defaults:
      run:
        shell: bash -l {0}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Clean out unused parts of environment.yml
        run: |
          python clean_environment.py ${{ matrix.algorithm }}
          mv clean_environment.yml environment.yml

      - name: Cache conda
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ matrix.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('environment.yml') }}

      - name: Set up Conda Environment 
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: srbench
          environment-file: environment.yml
          auto-activate-base: false
          # Use mamba:
          mamba-version: "*"
          channels: conda-forge,defaults
          channel-priority: strict
          # For caching:
          use-only-tar-bz2: true

      - run: |
          conda info
          conda list
          conda activate srbench

      - name: Set up Julia
        uses: julia-actions/setup-julia@v1.6.0
        # Only do this step for PySR:        
        if: ${{ matrix.algorithm }} == "PySRRegressor"
        with:
          version: ${{ matrix.julia-version }}

      - name: "Change julia package server"
        shell: bash
        env:
            JULIA_PKG_SERVER: ""
        run: julia -e 'using Pkg; Pkg.Registry.add("General")'

      # TODO: Only install algorithm required.
      - name: Install SR methods
        run: |
            conda info
            conda activate srbench
            ./install.sh ${{ matrix.algorithm }}
      
      - name: Test analysis 
        run: |
            conda info 
            cd experiment
            conda activate srbench
            python -m pytest -v test_evaluate_model.py --ml=${{ matrix.algorithm }}
            python -m pytest -v test_tuned_models.py --ml=${{ matrix.algorithm }}
