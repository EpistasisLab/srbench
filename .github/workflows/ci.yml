# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  push:
    branches:
      - Competition2022
    # paths:
    #   - 'submission/**'
    # paths-ignore:
    #   - 'submission/example/**'
  pull_request:
    branches: 
      - Competition2022 
    # paths:
    #   - 'submission/**'
    # paths-ignore:
    #   - 'submission/example/**'

env: 
  CACHE_NUMBER: 0

jobs:
  ################################################################################
  # basic submission checks
  ################################################################################
  check:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    outputs:
      subname: ${{ steps.get-folder.outputs.folder }}
    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v2
      - 
        name: get new folder name
        id: get-folder
        run: |
          ls
          echo "$(ls -t submission/ | head -n 1)"
          echo "::set-output name=folder::$( ls -t submission/ | head -n 1 )"
      - 
        name: check files exist
        run: |
          required_files=("regressor.py" "metadata.yaml")
          for [ f in ${required_files[@]} ] ; do
            if f ; then
              echo "::error:: missing $file"
            fi
          done
      - 
        name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: srcomp
          use-mamba: true
      - 
        name: Cache conda
        uses: actions/cache@v2
        with:
          path: /usr/share/miniconda3/envs/srcomp
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}
          restore-keys: |
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}
        id: cache


  ################################################################################
  # environment setup
  ################################################################################
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    needs: check
    env:
      SUBNAME: ${{ needs.check.outputs.subname }} 
      SUBFOLDER: submission/${{ needs.check.outputs.subname }} 
      SUBENV: srcomp-${{ needs.check.outputs.subname }} 
  
    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v2
      - 
        name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: srcomp
          use-mamba: true
      - 
        name: Cache conda
        uses: actions/cache@v2
        with:
          path: /usr/share/miniconda3/envs/srcomp
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}
          restore-keys: |
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}
        id: cache
      - 
        name: Update environment
        if: steps.cache.outputs.cache-hit != 'true'
        run: | 
          mamba env update -n srcomp -f environment.yml 
          mamba env export
################################################################################
# install the submission
################################################################################
      - 
        name: Install SR dependencies
        if: hashFiles('${{ env.SUBNAME }}/environment.yml') != ''
        run: |
          cd $SUBFOLDER
          pwd
          echo "Installing dependencies for ${SUBNAME}"
          echo "Copying base environment"
          conda create --name $SUBENV --clone srcomp
          echo "Installing conda dependencies"
          mamba env update -n $SUBENV -f environment.yml
      - 
        name: Install SR method
        if: hashFiles('${{ env.SUBFOLDER }}/install.sh') != ''
        run: |
          cd $SUBFOLDER 
          echo "running install.sh..."
          mamba run -n $SUBENV bash install.sh
      - 
        name: Copy files
        run: |
          mkdir -p experiment/methods/$SUBNAME
          cp $SUBFOLDER/regressor.py experiment/methods/$SUBNAME/
          cp $SUBFOLDER/metadata.yml experiment/methods/$SUBNAME/
          touch experiment/methods/$SUBNAME/__init__.py
  ################################################################################
  # tests
  ################################################################################
      - 
        name: Test Method
        run: |
          cd experiment
          pwd
          ls
          mamba run -n $SUBENV python -m pytest -v test_submission.py --ml $SUBNAME
      - 
        name: Save Competitor
        run: |
          source ci/store_competitor.sh 
