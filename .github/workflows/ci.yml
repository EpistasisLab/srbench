name: CI

# Controls when the action will run. 
on:
  push:
    paths:
      - 'algorithms/**'
      - 'experiment/**'
      - '.github/workflows/**'
  pull_request:
    paths:
      - 'algorithms/**'
      - 'experiment/**'
      - '.github/workflows/**'
  workflow_dispatch:

env: 
  CACHE_NUMBER: 1

jobs:
  ################################################################################
  # matrix build and test
  ################################################################################
  base-env-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v3
      - 
        name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: srbench
          use-mamba: true
      - 
        name: Cache srbench environment
        id: cache
        uses: actions/cache@v3
        with:
          path: /usr/share/miniconda3/envs/srbench
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('base_environment.yml') }}
          restore-keys: |
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('base_environment.yml') }}
      - 
        name: Update srbench environment
        if: steps.cache.outputs.cache-hit != 'true'
        run: | 
          echo "Didn't find the cache for the srbench environment :("
          conda info --envs
          mamba env update -n srbench -f base_environment.yml 
  list-algs:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: echo "::set-output name=matrix::$(ls algorithms/ | jq -R -s -c 'split("\n")[:-1]')"
  build-and-test:
    runs-on: ubuntu-latest
    needs: 
      - base-env-build
      - list-algs
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        # folder: ${{ fromJSON(needs.detect-directory-changes.outputs.changed) }}
        alg: ${{ fromJson(needs.list-algs.outputs.matrix) }}
      fail-fast: false
    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v3
      - 
        name: Filter to changed paths
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            alg:
              - format('algorithms/{0}/**', matrix.alg)
      - 
        name: Setup Mambaforge
        # if: steps.changes.outputs.alg == 'true'
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: srbench
          use-mamba: true
      - 
        name: Cache srbench environment
        id: cache-srbench
        # if: steps.changes.outputs.alg == 'true'
        uses: actions/cache@v3
        with:
          path: /usr/share/miniconda3/envs/srbench
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}
          restore-keys: |
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}
      - 
        name: Update srbench environment
        if: steps.cache-srbench.outputs.cache-hit != 'true'
        run: | 
          echo "Didn't find the cache for the srbench environment :("
          conda info --envs
          mamba env update -n srbench -f base_environment.yml 
################################################################################
# install the submission
################################################################################
      - 
        name: Cache alg environment
        id: cache-alg-env
        uses: actions/cache@v3
        with:
          path: /usr/share/miniconda3/envs/srbench-${{ matrix.alg }}
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles(format('./algorithms/{0}/**', matrix.alg)) }}
      - 
        name: Install method
        if: |
          steps.cache-alg-env.outputs.cache-hit != 'true'
        run: bash install.sh ${{ matrix.alg }}
      - 
        name: Print conda environment
        run: |
          echo "/////// Conda Environment (conda env export)/////"
          conda env export  
          echo "/////////////////////////////////////////////////"
  ################################################################################
  # tests
  ################################################################################
      -
        name: Test Method
        run: |
          cd experiment
          pwd
          ls
          mamba run -n srbench-${{ matrix.alg }} python -m pytest -v test_algorithm.py --ml ${{ matrix.alg }}
################################################################################          
