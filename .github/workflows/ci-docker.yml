name: Docker CI

# Controls when the action will run. 
on:
  push:
    branches:
      - docker-compose
      - main
  #   paths:
  #     - 'algorithms/**'
  #     - 'experiment/**'
  #     - '.github/workflows/**'
  pull_request:
    branches:
      - docker-compose
  #   paths:
  #     - 'algorithms/**'
  #     - 'experiment/**'
  #     - '.github/workflows/**'
  # workflow_dispatch:

# env:
#   USER: ${{ secrets.DOCKER_HUB_USERNAME }}
#   PASS: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#   APP: srbench

jobs:
  ################################################################################
  # Check for changed files
  ################################################################################
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-algs: ${{ steps.check.outputs.changed-algs }}
      unchanged-algs: ${{ steps.check.outputs.unchanged-algs }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: check
        run: |
          echo "::set-output name=changed-algs::$(git diff --name-only HEAD~1..HEAD | grep '^algorithms/' | cut -d '/' -f 2)"
          echo "::set-output name=unchanged-algs::$(comm -23 <(ls algorithms/) <(git diff --name-only HEAD~1..HEAD | grep '^algorithms/' | cut -d '/' -f 2))"
          echo "Changed Algorithms:"
          git diff --name-only HEAD~1..HEAD | grep '^algorithms/' | cut -d '/' -f 2
          echo "Unchanged Algorithms:"
          comm -23 <(ls algorithms/) <(git diff --name-only HEAD~1..HEAD | grep '^algorithms/' | cut -d '/' -f 2)
  
  ################################################################################
  # get a list of algorithms
  ################################################################################
  list-algs:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: echo "::set-output name=matrix::$(ls algorithms/ | jq -R -s -c 'split("\n")[:-1]')"
  
  ################################################################################
  # build each algorithm in parallel and run tests
  ################################################################################
  build-and-test:
    runs-on: ubuntu-latest
    needs: 
      - check-changes
      - list-algs
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        alg: ${{ fromJson(needs.list-algs.outputs.matrix) }}
      fail-fast: false
    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v3
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_KEY }}
      - 
        name: Make docker-compose.yml file
        run: bash scripts/make_docker_compose_file.sh
      # - 
      #   name: Pull docker image
      #   run: docker compose pull ${{ matrix.alg }}
      # - 
      #   name: Build docker image
      #   run: docker compose build ${{ matrix.alg }}
      - 
        name: Check if algorithm has changed
        id: check_algorithm
        run: |
          CHANGED_ALGS=$(echo "${{ needs.check-changes.outputs.changed-algs }}" | tr ',' '\n')
          if [[ "$CHANGED_ALGS" == *"${{ matrix.alg }}"* ]]; then
            echo "::set-output name=should_run::true"
          else
            echo "::set-output name=should_run::false"
          fi
      - 
        name: Test docker image
        if: steps.check_algorithm.outputs.should_run == 'true'
        run: docker compose run --build ${{ matrix.alg }} bash test.sh
      # - 
      #   name: Push docker image
      #   run: docker compose push ${{ matrix.alg }}
      ################################################################################
      # tests
      ################################################################################
      # -
      #   name: Test Method
      #   run: |
      #     docker compose run ${{ matrix.alg }} bash test.sh
      # - 
      #   name: Push docker image
      #   run: docker compose push ${{ matrix.alg }}